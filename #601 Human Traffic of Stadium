step 1: select records where people >= 100, and create a ref column as the diff between id and row_number, consecutive records with have the same ref
step 2: use window function to calculate the number of times for each ref
step 3: select where ref appears over 3 times

select
    id, 
    visit_date,
    people
from
(select
    id,
    visit_date,
    people,
    count(*) over(partition by ref) as cnt
from
(select
    *,
    id - row_number() over(order by visit_date) as ref
from Stadium
where people >= 100)a) a  where cnt >= 3

R code:
Stadium <- data.frame(id = c(1, 2, 3, 4, 5, 6, 7, 8),
                      people = c(10, 109, 150, 99, 145, 1455, 199, 188)
)
Statium <- Stadium %>% filter(people >= 100) 
result = data.frame(id = numeric(),
                    people = numeric()
)
for (i in 1:(nrow(Stadium) - 2)){
  if (Stadium[i,]$people >= 100 & Stadium[i + 1,]$people >= 100 & Stadium[i + 2,]$people >= 100) {
    result = rbind(result, Stadium[i,], Stadium[i+1, ], Stadium[i+2,])
  }
}
result %>% distinct()

Table: Stadium

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| visit_date    | date    |
| people        | int     |
+---------------+---------+
visit_date is the primary key for this table.
Each row of this table contains the visit date and visit id to the stadium with the number of people during the visit.
No two rows will have the same visit_date, and as the id increases, the dates increase as well.
 

Write an SQL query to display the records with three or more rows with consecutive id's, and the number of people is greater than or equal to 100 for each.

Return the result table ordered by visit_date in ascending order.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/human-traffic-of-stadium
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
